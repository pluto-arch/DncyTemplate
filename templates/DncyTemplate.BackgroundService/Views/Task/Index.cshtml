@using System
@section Styles
{
    <style type="text/css">
        .backgroundTask { padding: 20px 0; }

        .create-form {
            min-height: 300px;
            min-width: 400px;
        }
    </style>
}

<div class="backgroundTask">
    <p>
        <h1>后台作业</h1>
    </p>
    <table id="taskTable" lay-filter="test"></table>
</div>


<div id="addjobEl" style="display: none;padding: 10px">
    <form class="layui-form" action="">
        <div class="layui-form-item">
            <label class="layui-form-label"><i class="tip-required">*</i> 任务名称</label>
            <div class="layui-input-block">
                <input type="text" name="name" required lay-verify="required" placeholder="请输入任务名称" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">显示名称</label>
            <div class="layui-input-block">
                <input type="text" name="displayName" placeholder="请输入任务名称" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label"><i class="tip-required">*</i> 组名</label>
            <div class="layui-input-block">
                <input type="text" name="groupName" placeholder="请输入组名" autocomplete="off" class="layui-input" value="Default">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label"><i class="tip-required">*</i> 周期(Corn)</label>
            <div class="layui-input-block">
                <input type="text" name="interval" required lay-verify="required" placeholder="周期" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label"> 说明描述 </label>
            <div class="layui-input-block">
                <textarea name="desc" placeholder="请输入内容" class="layui-textarea"></textarea>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label"><i class="tip-required">*</i> CallUrl</label>
            <div class="layui-input-block">
                <input type="text" name="callUrl" required lay-verify="required" placeholder="远程调用url" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">远程调用header(key)</label>
            <div class="layui-input-block">
                <input type="text" name="headerKey" placeholder="远程调用header(key)" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">远程调用header(value)</label>
            <div class="layui-input-block">
                <input type="text" name="headerValue"  placeholder="远程调用header(value)" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="tr">
            <button type="reset" id="cancelAuth" class="layui-btn layui-btn-primary">取消</button>
            <button class="layui-btn layui-btn-normal" lay-submit lay-filter="formDemo">保存</button>
        </div>
    </form>
</div>


@section Scripts
{
    <script type="text/javascript">
        let jobLog = [];
        layui.use(['table', 'laytpl', 'form'],
            function() {
                var table = layui.table;
                var laytpl = layui.laytpl;
                var form = layui.form;

                let formLayer;
                //第一个实例
                table.render({
                    elem: '#taskTable',
                    id: 'taskTable',
                    url: '/task/tasks',
                    page: false,
                    toolbar: '#toolbarDemo',
                    defaultToolbar: [
                        {
                            title: '提示',
                            layEvent: 'LAYTABLE_TIPS',
                            icon: 'layui-icon-refresh'
                        }
                    ],
                    cols: [
                        [
                            { field: 'id', title: 'ID', type: 'checkbox' },
                            { field: 'groupName', title: '组别', width: 150 },
                            { field: 'displayName', title: '作业名称', width: 150 },
                            { field: 'describe', title: '描述' },
                            { field: 'interval', title: 'corn表达式', width: 100 },
                            { field: 'status', title: '状态', templet: '#state', width: 80 },
                            { field: 'triggerName', title: '触发器名称', width: 200 },
                            { field: 'lastRunTime', title: '上次触发时间', width: 200 },
                            { fixed: 'right', field: 'id', title: '操作', toolbar: '#opt', width: 300 }
                        ]
                    ]
                });
                //头工具栏事件
                table.on('toolbar(test)',
                    function(obj) {
                        var checkStatus = table.checkStatus(obj.config.id);
                        switch (obj.event) {
                        case 'addJob':
                            formLayer = layer.open({
                                type: 1,
                                title: false,
                                closeBtn: 0,
                                shadeClose: true,
                                skin: 'create-form',
                                content: $('#addjobEl')
                            });
                            break;

                        //自定义头工具栏右侧图标 - 提示
                        case 'LAYTABLE_TIPS':
                            table.reload('taskTable');
                            break;
                        };
                    });
                //监听行工具事件
                table.on('tool(test)',
                    function(obj) {
                        var data = obj.data;
                        if (obj.event === 'pause') {
                            layer.confirm('确定要暂停 ？',
                                function(index) {
                                    $.ajax({
                                        url: '/task/PauseTask',
                                        type: 'POST',
                                        data: {
                                            id: data.id
                                        },
                                        success: function(res) {
                                            showMsg("暂停成功");
                                            layer.close(index);
                                            table.reload('taskTable');
                                        },
                                        error: function(error) {
                                            showMsg("暂停失败");
                                            layer.close(index);
                                            table.reload('taskTable');
                                        }
                                    });

                                });
                        } else if (obj.event === 'delete') {
                            showMsg("delete");
                        } else if (obj.event === 'refire') {
                            showMsg("delete");
                            $.ajax({
                                url: '/task/Refire',
                                type: 'POST',
                                data: {
                                    id: data.id
                                },
                                success: function(res) {
                                    showMsg("重启成功");
                                    table.reload('taskTable');
                                },
                                error: function(error) {
                                    showMsg("重启失败");
                                    table.reload('taskTable');
                                }
                            });
                        } else if (obj.event === 'showLogs') {
                            $.ajax({
                                url: '/task/JobLogs',
                                type: 'GET',
                                data: {
                                    id: data.id
                                },
                                success: function(res) {
                                    jobLog = res.data;
                                    let logHtml = '';
                                    const getTpl = jobLogs.innerHTML;
                                    laytpl(getTpl).render(jobLog,
                                        function(html) {
                                            logHtml = html;
                                        });
                                    layer.open({
                                        type: 1,
                                        title: `${data.taskName} 执行日志`,
                                        shadeClose: true,
                                        shade: 0.8,
                                        area: ['380px', '90%'],
                                        content: logHtml
                                    });
                                },
                                error: function(error) {
                                    showMsg("查询日志失败");
                                    table.reload('taskTable');
                                }
                            });
                        } else if (obj.event === 'executeNow') {
                            $.ajax({
                                url: '/task/Execute',
                                type: 'GET',
                                data: {
                                    id: data.id
                                },
                                success: function(res) {
                                    showMsg("发送指令成功");
                                },
                                error: function(error) {
                                    showMsg("发送指令失败");
                                }
                            });
                        }
                    });


                form.render({
                    elem: '#addjobEl'
                });
                $('#cancelAuth').click(function() {
                    layer.close(formLayer);
                });
                //自定义验证规则
                form.verify({
                    name: function(value) {
                        if (value.trim().length === 0) {
                            return '请输入真实姓名！';
                        }
                    },
                    interval: function(value) {
                        if (value.trim().length === 0) {
                            return '周期不能为空！';
                        }
                    }
                });
                form.on('submit(formDemo)',
                    function(data) {
                        // 这里处理 表单提交数据逻辑处理；
                        console.log(data);
                        console.log(data.field);

                        $.post("/task/add", data.field)
                            .done(function(result, status, xhr) {
                                layer.msg('创建成功');
                            })
                            .fail(function(xhr, status, error) {
                                layer.msg(`创建失败: ${xhr.statusText}`);
                            });

                        //防止layui form提交刷新页面；
                        return false;
                    });

            });
    </script>

    <script type="text/html" id="jobLogs">
        <ul class="layui-timeline" style="padding: 20px 20px">
            {{# layui.each(d, function(index, item){ }}
            <li class="layui-timeline-item">
                {{# if(item.state!=1){ }}
                <i class="layui-icon layui-timeline-axis layui-bg-red">&#xe63f;</i>
                {{# } else{ }}
                <i class="layui-icon layui-timeline-axis layui-bg-blue">&#xe63f;</i>
                {{# } }}
                <div class="layui-timeline-content layui-text">
                    <h3 class="layui-timeline-title" style="margin-bottom: 0">{{ item.time }}</h3>
                    <p style="margin: 0">执行时间：{{item.runSeconds}}s </p>
                    <p style="margin: 0">信息：{{item.message??''}}</p>
                </div>
            </li>
            {{# }) }}
        </ul>
    </script>

    <script type="text/html" id="state">
        {{# if(d.status===0) { }}
        <span class="layui-font-gray">未知</span>
        {{# } else if(d.status===1) { }}
        <span class="layui-font-green">正常</span>
        {{# } else if(d.status===2) { }}
        <span class="layui-font-blue">暂停</span>
        {{# } else if(d.status===3) { }}
        <span class="layui-font-red">完成</span>
        {{# } else if(d.status===4) { }}
        <span class="layui-font-orange">异常</span>
        {{# } else if(d.status===5) { }}
        <span class="layui-font-gray">阻塞</span>
        {{# } else if(d.status===6) { }}
        <span class="layui-font-orange">停止</span>
        {{# } }}
    </script>

    <script type="text/html" id="triggerState">
        {{# if(d.triggerStatus===0) { }}
        <span class="layui-font-green">正常</span>
        {{# } else if(d.triggerStatus===1) { }}
        <span class="layui-font-black">暂停</span>
        {{# } else if(d.triggerStatus===2) { }}
        <span class="layui-font-blue">完成</span>
        {{# } else if(d.triggerStatus===3) { }}
        <span class="layui-font-red">错误</span>
        {{# } else if(d.triggerStatus===4) { }}
        <span class="layui-font-orange">阻塞</span>
        {{# } else if(d.triggerStatus===5) { }}
        <span class="layui-font-gray">无</span>
        {{# } }}
    </script>

    <script type="text/html" id="opt">
        {{# if(d.status===0) { }}
        {{# } else if(d.status===1) { }}
        <a class="layui-btn layui-btn-primary layui-btn-xs layui-border-orange" lay-event="pause">暂停</a>
        {{# } else if(d.status===2||d.status===4) { }}
        <a class="layui-btn layui-btn-primary layui-btn-xs layui-border-blue" lay-event="refire">重启</a>
        {{# } }}
        <a class="layui-btn layui-btn-primary layui-btn-xs layui-border-red" lay-event="executeNow">立即执行</a>
        <a class="layui-btn layui-btn-primary layui-btn-xs layui-border-green" lay-event="showLogs">查看日志</a>
    </script>


    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-normal" lay-event="addJob">新建</button>
        </div>
    </script>

}


